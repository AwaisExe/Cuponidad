// <auto-generated />
using Cuponidad.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cuponidad.DataAccessLayer.Migrations
{
    [DbContext(typeof(CuponContext))]
    [Migration("20181228155804_DbCreated")]
    partial class DbCreated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.Cart", b =>
                {
                    b.Property<int>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductID");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<decimal>("Total");

                    b.Property<int>("UserID");

                    b.HasKey("CartID");

                    b.HasIndex("ProductID")
                        .IsUnique();

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryLevelID");

                    b.Property<int>("FamilyID");

                    b.Property<string>("Name");

                    b.HasKey("CategoryID");

                    b.HasIndex("CategoryLevelID")
                        .HasName("Index_CategoryLevelID");

                    b.HasIndex("FamilyID")
                        .HasName("Index_FamilyID");

                    b.ToTable("Categories");

                    b.HasData(
                        new { CategoryID = 1, CategoryLevelID = 2, FamilyID = 1, Name = "Accesorios Para Auto" },
                        new { CategoryID = 2, CategoryLevelID = 2, FamilyID = 1, Name = "Camping" },
                        new { CategoryID = 3, CategoryLevelID = 2, FamilyID = 2, Name = "Año Nuevo" },
                        new { CategoryID = 4, CategoryLevelID = 2, FamilyID = 2, Name = "Hoteles" },
                        new { CategoryID = 5, CategoryLevelID = 3, FamilyID = 9, Name = "Buffets" },
                        new { CategoryID = 6, CategoryLevelID = 3, FamilyID = 6, Name = "Actividades Familiares" },
                        new { CategoryID = 7, CategoryLevelID = 3, FamilyID = 6, Name = "Teatro" },
                        new { CategoryID = 8, CategoryLevelID = 3, FamilyID = 8, Name = "Maquillaje y Extensiones" },
                        new { CategoryID = 9, CategoryLevelID = 3, FamilyID = 4, Name = "Fotografia" }
                    );
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.CategoryLevel", b =>
                {
                    b.Property<int>("CategoryLevelID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<int>("LevelNumber");

                    b.HasKey("CategoryLevelID");

                    b.ToTable("CategoryLevels");

                    b.HasData(
                        new { CategoryLevelID = 1, LevelNumber = 1 },
                        new { CategoryLevelID = 2, LevelNumber = 2 },
                        new { CategoryLevelID = 3, LevelNumber = 3 }
                    );
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direction");

                    b.Property<string>("Phone");

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");

                    b.HasData(
                        new { CompanyID = 1, Direction = "Company 1", Phone = "11515455" },
                        new { CompanyID = 2, Direction = "Company 2", Phone = "65685448" },
                        new { CompanyID = 3, Direction = "Company 3", Phone = "45487877" }
                    );
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");

                    b.HasData(
                        new { DepartmentID = 1, Name = "Department 1" },
                        new { DepartmentID = 2, Name = "Department 2" },
                        new { DepartmentID = 3, Name = "Department 3" }
                    );
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.DropDownListBydays", b =>
                {
                    b.Property<int>("DaysOpenID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("DaysOpenID");

                    b.ToTable("DropDownListBydays");
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.Family", b =>
                {
                    b.Property<int>("FamilyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath");

                    b.Property<string>("Name");

                    b.HasKey("FamilyID");

                    b.ToTable("Families");

                    b.HasData(
                        new { FamilyID = 1, ImagePath = "images/a2.png", Name = "Productos" },
                        new { FamilyID = 2, ImagePath = "images/f2.png", Name = "Viajes" },
                        new { FamilyID = 3, ImagePath = "images/d2.png", Name = "Salud" },
                        new { FamilyID = 4, ImagePath = "images/e2.png", Name = "Servicios" },
                        new { FamilyID = 5, ImagePath = "images/menucyberday2018v3.png", Name = "Cyber Days " },
                        new { FamilyID = 6, ImagePath = "images/entre2c.png", Name = "Entretenimiento" },
                        new { FamilyID = 7, ImagePath = "images/sinreservaicov2.png", Name = "Sin Reserva" },
                        new { FamilyID = 8, ImagePath = "images/b2.png", Name = "Belleza" },
                        new { FamilyID = 9, ImagePath = "images/buffet2c.png", Name = "Restaurantes" },
                        new { FamilyID = 10, ImagePath = "images/g2.png", Name = "Cines" }
                    );
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID");

                    b.Property<int>("CompanyID");

                    b.Property<string>("Conditions");

                    b.Property<string>("DayUse");

                    b.Property<int>("DaysOpenID");

                    b.Property<int>("DepartmentID");

                    b.Property<string>("Description");

                    b.Property<decimal>("Discount");

                    b.Property<string>("ImagePath");

                    b.Property<string>("Name");

                    b.Property<decimal>("Prize");

                    b.Property<int>("QuantitySold");

                    b.Property<float>("Rating");

                    b.Property<string>("Terms");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("DaysOpenID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.RightBanner", b =>
                {
                    b.Property<int>("RightBannerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductID");

                    b.HasKey("RightBannerID");

                    b.HasIndex("ProductID");

                    b.ToTable("RightBanners");
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CellPhone");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("FullName")
                        .HasMaxLength(100);

                    b.Property<int>("Gender");

                    b.Property<string>("Password")
                        .HasMaxLength(100);

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.Cart", b =>
                {
                    b.HasOne("Cuponidad.DataAccessLayer.Model.Product", "Product")
                        .WithOne("Cart")
                        .HasForeignKey("Cuponidad.DataAccessLayer.Model.Cart", "ProductID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cuponidad.DataAccessLayer.Model.User", "User")
                        .WithOne("cart")
                        .HasForeignKey("Cuponidad.DataAccessLayer.Model.Cart", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.Category", b =>
                {
                    b.HasOne("Cuponidad.DataAccessLayer.Model.CategoryLevel", "CategoryLevel")
                        .WithOne("Category")
                        .HasForeignKey("Cuponidad.DataAccessLayer.Model.Category", "CategoryLevelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cuponidad.DataAccessLayer.Model.Family", "Family")
                        .WithOne("Category")
                        .HasForeignKey("Cuponidad.DataAccessLayer.Model.Category", "FamilyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.Product", b =>
                {
                    b.HasOne("Cuponidad.DataAccessLayer.Model.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cuponidad.DataAccessLayer.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cuponidad.DataAccessLayer.Model.DropDownListBydays", "DropDownListBydays")
                        .WithMany()
                        .HasForeignKey("DaysOpenID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Cuponidad.DataAccessLayer.Model.RightBanner", b =>
                {
                    b.HasOne("Cuponidad.DataAccessLayer.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
